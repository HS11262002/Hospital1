require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/prescriptions", type: :request do
  # This should return the minimal set of attributes required to create a valid
  # Prescription. As you add validations to Prescription, be sure to
  # adjust the attributes here as well.
  before(:example) do
    @visit = build(:visit)
    @visit.save
    @prescription = build(:prescription , :visit_id => @visit.id)
    @prescription.save
  end


  describe 'GET #index' do
    it 'returns http success' do
      get visit_prescriptions_path(:visit_id)
      expect(response).to have_http_status(:success)
    end
  end

  describe 'POST #create' do
    it 'returns http success' do
      get visit_prescriptions_path(:visit_id)
      expect(response).to have_http_status(:success)
    end
  end

  describe 'GET #show' do
    it 'returns http success' do
      get visit_prescription_path(:visit_id=> @visit.id, :id=> @prescription.id)
      expect(response).to have_http_status(:success)
    end
  end

  # describe 'PATCH #update' do
  #   it 'returns http success' do
  #     patch visit_prescription_path(:visit_id => @visit.id, :id =>@prescription.id)
  #     expect(response).to have_http_status(:success)
  #   end
  # end
end
